<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Description>
CsCheck is a C# random testing library inspired by QuickCheck.

It differs in that generation and shrinking are both based on PCG, a fast random number generator.

This gives the following advantages:

- Automatic shrinking. Gen classes are composable with no need for Arb classes. So less boilerplate.
- Random testing and shrinking are parallelized. This and PCG make it very fast.
- Shrunk cases have a seed value. Simpler examples can easily be reproduced.
- Shrinking can be continued later to give simpler cases for high dimensional problems.
- Concurrency testing and random shrinking work well together.

CsCheck also makes concurrency, performance and regression testing simple and fast.
        </Description>
        <Authors>Anthony Lloyd</Authors>
        <Owners>Anthony Lloyd</Owners>
        <Copyright>Copyright 2023</Copyright>
        <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
        <PackageProjectUrl>http://github.com/AnthonyLloyd/CsCheck</PackageProjectUrl>
        <PackageIcon>CsCheck.png</PackageIcon>
        <PackageTags>quickcheck;random;model-based;metamorphic;concurrency;performance;causal-profiling;regression;testing</PackageTags>
        <Version>3.0.0-rc2</Version>
        <PackageReleaseNotes>
Improved generation for double, float and decimal. Mix of integer, fraction, exponential and evenly distributed.
Improved Print for double, float and decimal. Displays small rounded fraction and exponential representation.
Improved min size passing and shrinking.
Large performance improvements for Sample and Faster.
Added optimised Timer functionality and funcless IInvoke.
Added Gen&lt;T&gt;.Single() that generates a single random value.

BREAKING CHANGES:
- Example(predicate) renamed to Single(predicate).
- Removed SampleOne, use Sample(..., iter: 1, time: -2) instead.
- Removed Cast, use Select instead (better performance).
- Removed Create, create a : Gen&lt;T&gt; class instead.
- Removed SelectTuple.
- Removed Gen.Enumerable.
- Removed Gen.Double.Positive, Gen.Double.Normal etc
- Added max count to Where.
- Now targets net6.0, 2.14.1 was the last to target netstandard2.0
        </PackageReleaseNotes>
        <TargetFramework>net6.0</TargetFramework>
        <LangVersion>preview</LangVersion>
        <WarningLevel>999</WarningLevel>
        <Nullable>enable</Nullable>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <SignAssembly>true</SignAssembly>
        <DelaySign>false</DelaySign>
        <AssemblyOriginatorKeyFile>../SigningKey.snk</AssemblyOriginatorKeyFile>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>CS1591</NoWarn>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>
    <ItemGroup>
        <None Include="../CsCheck.png" Pack="true" PackagePath="" Visible="False" />
        <None Include="../README.md" Pack="true" PackagePath="" Visible="False" />
    </ItemGroup>
</Project>